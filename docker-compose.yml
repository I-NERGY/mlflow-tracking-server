version: '3.3'
volumes:
    database:
    artifact-store: 

services:
    s3:
        image: minio/minio:RELEASE.2020-12-18T03-27-42Z
        container_name: s3
        hostname: s3
        volumes:
            - artifact-store:/data
        ports:
            - ${MINIO_PORT}:${MINIO_PORT}
        environment:
            MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
            MINIO_SECRET_KEY: ${MINIO_ACCESS_KEY}
        command: server /data
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:${MINIO_PORT}/minio/health/live"]
            interval: 10s
            timeout: 10s
            start_period: 3s
            retries: 3

    create_bucket:
        image: minio/mc:RELEASE.2019-07-17T22-13-42Z
        depends_on:
            - s3    
        environment:
            MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY} 
            MINIO_SECRET__KEY: ${MINIO_SECRET_KEY}
        entrypoint: >
            /bin/sh -c '
            sleep 5;
            /usr/bin/mc config host add s3 http://s3:${MINIO_PORT} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY} --api S3v4;
            [[ ! -z "`/usr/bin/mc ls s3 | grep challenge`" ]] || /usr/bin/mc mb s3/${BUCKET_NAME};
            /usr/bin/mc policy download s3/${BUCKET_NAME};
            /usr/bin/mc policy set public s3/${BUCKET_NAME};
            exit 0;
            '
    pgdb:
        container_name: pgdb
        restart: always
        build: ./docker-db
        image: pgdb
        volumes:
            - database:/var/lib/postgresql/data
        ports:
            - 5432:5432
        expose:
            - '5432'
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DATABASE: ${POSTGRES_DATABASE}
            PGDATA: /var/lib/postgresql/data/pgdata

    mlflow_server:
        restart: always
        build: ./docker-mlflow-server
        image: mlflow_server
        container_name: mlflow_server
        ports:
            - 5000:5000
        expose:
            - 5000
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DATABASE: ${POSTGRES_DATABASE}
            MLFLOW_S3_ENDPOINT_URL: http://minio:${MINIO_PORT}
            AWS_ACCESS_KEY_ID: minio-id
            AWS_SECRET_ACCESS_KEY: minio-key
        depends_on: 
            - s3
            - pgdb
        command: bash -c 
            "mlflow server --backend-store-uri postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgdb:5432/${POSTGRES_DATABASE} --host 0.0.0.0 --default-artifact-root s3://${BUCKET_NAME}/"

# volumes are initiated locally in /var/lib/docker/volumes

    
